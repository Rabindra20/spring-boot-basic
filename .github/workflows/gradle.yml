name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0

    - name: Build with Gradle Wrapper
      run: chmod +x gradlew && ./gradlew build

    # - name: notification
    #   uses: ravsamhq/notify-slack-action@2.3.0
    #   if: always()
    #   with:
    #     status: ${{ job.status }}
    #     notification_title: "{workflow} has {status_message}"
    #     message_format: "{emoji} *{workflow}* {status_message} push by ${{ github.actor }} :rocket:"
    #     # footer: "Linked Repo <{repo_url}|{repo}>"
    #     mention_groups: "!channel"
    #     mention_groups_when: "failure"
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    - name: test
      if: always()
      env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
       JOB_STATUS="${{ job.status }}"

       SUCCESS_EMOJI="✅"
       FAILURE_EMOJI="❌"
       
       if [ "$JOB_STATUS" = "failure" ]; then
           JSON_DATA="{\"text\":\"$FAILURE_EMOJI Job failed: job fail :rocket: \"}"
       else
           JSON_DATA="{\"text\":\"$SUCCESS_EMOJI Job succeeded: job success :rocket: \"}"
       fi
       curl -X POST -H 'Content-type: application/json' --data "$JSON_DATA" $SLACK_WEBHOOK_URL
    # - uses: rtCamp/action-slack-notify@v2
    #   env:
    #       SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
    #       SLACK_MESSAGE: 'Post Content :rocket:'
    #       SLACK_TITLE: ${{ job.status }}
    #       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}